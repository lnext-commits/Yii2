<?php

namespace models;

use Yii;
use yii\base\NotSupportedException;
use yii\behaviors\TimestampBehavior;
use yii\db\ActiveRecord;
use yii\web\IdentityInterface;
/**
 * Products model
 *
 * @property integer $id
 * @property string $tytle_ru
 */

class CompanyFieldsItem24 extends ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%b24_company_fields_item}}';
    }

    public function beforeSave($insert)
    {
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function save($runValidation = true, $attributeNames = null)
    {
        return parent::save($runValidation, $attributeNames); // TODO: Change the autogenerated stub
    }

    static public function getTypePay($id){
        if ($name = self::findOne(['item_id' => $id, 'field_id' => 106])) {
            return $name->value;
        }
        return $id;
    }

    static public function getAllTypePay(){
        $ret = [];
        foreach(self::findAll(['field_id' => 106]) as $k => $pay) {
            $ret[$k]=[
                'id' => $pay->item_id,
                'value' => $pay->value
            ];
        }
        return $ret;
    }

    static public function getTypeVats($id, $fieldId){
        if ($name = self::findOne(['item_id' => $id, 'field_id' => $fieldId])) {
            return $name->value;
        }
        return '';
    }
}