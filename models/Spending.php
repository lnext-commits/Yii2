<?php

namespace models;

use bitrix\components\CRest;
use Yii;
use yii\behaviors\TimestampBehavior;
use yii\db\ActiveRecord;

/**
 * Products model
 *
 * @property integer $id
 */
class Spending extends ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%ttl_spending}}';
    }

    public function beforeSave($insert)
    {
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function getValue($key, $lang = 'ru')
    {
        switch ($key) {
            case 'type_id':
                if ($type = SpendingType::find()->select(['title_' . $lang])->where(['type_id' => $this->$key])->asArray()->one()) {
                    return $type['title_' . $lang];
                }
                break;
            case 'currency_id':
                if ($currency = Currency24::find()->select(['title_' . $lang])->where(['id' => $this->$key])->asArray()->one()) {
                    return $currency['title_' . $lang];
                }
                break;
            case 'created_at':
            case 'updated_at':
                return date('d-m-Y H:i', $this->$key);
                break;
            default:
                break;
        }
        return $this->$key;
    }


    public function behaviors()
    {
        return [
            TimestampBehavior::className(),
        ];
    }

    static public function setPriceByOrderCurrency($spen, $currency)
    {
        $curs = [];
        foreach ($currency as $k => $value) {
            $curs[$value['id']] = $value['value'];
        }
        if ($spen['curr'] != 1) {
            $spen['price'] = $spen['price'] / $curs[$spen['curr']];
        }

        $spen['price'] = round($spen['price'], 3);
        return $spen;
    }
}