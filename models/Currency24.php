<?php

namespace models;

use bitrix\components\CRest;
use Yii;
use yii\db\ActiveRecord;

/**
 * Products model
 *
 * @property integer $id
 */
class Currency24 extends ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%b24_currency}}';
    }

    public function beforeSave($insert)
    {
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    static public function loadCurrency(){
        $deal = CRest::call('crm.currency.list');


        if ($deal && isset($deal['result']))

            foreach ($deal['result'] as $k => $v){
                if(!$vat = Currency24::findOne(['currency'=>$v['CURRENCY']])){
                    $vat = new Currency24();
                }
                $vat->currency = $v['CURRENCY'];
                $vat->amount = $v['AMOUNT'];
                $vat->title = $v['FULL_NAME'];
                $vat->format_str = $v['FORMAT_STRING'];
                $vat->t_separator = $v['THOUSANDS_SEP'];
                $vat->save();
            }
    }

    static public function updateFromCreditAgricole(){
        $deal = @file_get_contents('https://credit-agricole.ua/ru/kurs-valyut' );

        $dom = new \DOMDocument();
        @$dom->loadHTML($deal);

        $elementsByClass = (new Currency24)->getElementsByClassName($dom, 'currency', 'div');

        //  $json = json_encode($result);
        $curr = [];
        foreach ($elementsByClass as $k => $el){
            $curr[$k] = str_replace(["  " , "***"] , '' , str_replace(["\n" , "\r"] , '*' , $el->nodeValue));
            if($k==2){
                break;
            }
        }
        if(count($curr) > 0) {
            foreach ($curr as $k => $c) {
                $currency = str_replace('*', '', explode("**", $c));
                if ($b24Curr = self::findOne(['currency' => $currency[0]])) {
                    $b24Curr->amount = $currency[2];
                    $b24Curr->update();
                }
            };
        }
    }
   private function getElementsByClassName($dom, $ClassName, $tagName=null) {
        if($tagName){
            $Elements = $dom->getElementsByTagName($tagName);
        }else {
            $Elements = $dom->getElementsByTagName("*");
        }
        $Matched = array();
        for($i=0;$i<$Elements->length;$i++) {
            if($Elements->item($i)->attributes->getNamedItem('class')){
                if($Elements->item($i)->attributes->getNamedItem('class')->nodeValue == $ClassName) {
                    $Matched[]=$Elements->item($i);
                }
            }
        }
        return $Matched;
    }
}