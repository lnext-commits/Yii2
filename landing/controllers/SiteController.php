<?php

namespace landing\controllers;

use cinghie\multilanguage\widgets\MultiLanguageWidget;
use Yii;
use yii\web\BadRequestHttpException;
use yii\web\Controller;
use yii\filters\VerbFilter;
use yii\filters\AccessControl;
use common\models\LoginForm;

/**
 * Site controller
 */
class SiteController extends Controller
{
    public $lang = 'en';

    /**
     * {@inheritdoc}
     */
    public function actions()
    {
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
        ];
    }

    public function beforeAction($action)
    {
        $this->lang = Yii::$app->request->getPreferredLanguage();
        //var_dump($this->lang);
        try {
            return parent::beforeAction($action);
        } catch (BadRequestHttpException $e) {
        } // TODO: Change the autogenerated stub
    }

    /**
     * Displays homepage.
     *
     * @return string
     */
    public function actionIndex()
    {
        return $this->render('index');
    }

    /**
     * Login action.
     *
     * @return string
     */
    public function actionLogin()
    {
        if (!Yii::$app->user->isGuest) {
            return $this->goHome();
        }

        $model = new LoginForm();

        if ($model->load(Yii::$app->request->post()) && $model->login()) {
            return $this->redirect('/');
        } else {
            $model->password = '';

            return $this->render('login', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Logout action.
     *
     * @return string
     */
    public function actionLogout()
    {
        Yii::$app->user->logout();

        return $this->goHome();
    }

    public function actionPolitic()
    {
        return $this->render('../site/index', ['page' => 'info', 'action' => $this->action->id]);
    }

    public function actionConf()
    {
        return $this->render('../site/index', ['page' => 'info', 'action' => $this->action->id]);

    }

    public function actionUpdate()
    {
        if ($body = Yii::$app->request->getBodyParams()) {
            if (isset($body['Setting']['type'])) {
                if (!$set = Setting::findOne(['type' => $body['Setting']['type']])) {
                    $set = new Setting();
                }
                foreach ($body['Setting'] as $k => $v) {
                    $set->$k = $v;
                }
                $set->save();
            }
        }
        return $this->redirect('/' . $body['Setting']['type']);
    }

    public function actionGetcity($id)
    {
        if (Country::findOne($id)) {
            die(json_encode(City::find()->select(['name_ru as name', 'id'])->where(['country_id' => $id])->orderBy('sort DESC , name ASC')->asArray()->all(), JSON_UNESCAPED_UNICODE));
        }
    }
}
