<?php

namespace models;

use bitrix\components\CRest;
use Yii;
use yii\db\ActiveRecord;

/**
 * Products model
 *
 * @property integer $id
 */
class Deals24 extends ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%b24_deals}}';
    }


    public function beforeSave($insert)
    {
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        //self::loadDealStatusFromB24();
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    static public function loadDealEntryFromB24(int $idDeal)
    {
        $deal = CRest::call('crm.deal.get', [
            'id' => $idDeal,
        ]);

        if ($deal && isset($deal['result']))
            return $deal['result'];

        return null;
    }

    static public function loadDealStatusFromB24()
    {
        $catList = CRest::call('crm.dealcategory.list');
        foreach ($catList['result'] as $k => $cat) {
            $deal = CRest::call('crm.dealcategory.stage.list', [
                'id' => $cat['ID'],
            ]);

            if ($deal && isset($deal['result']))
                foreach ($deal['result'] as $d => $status) {
                    if (!$dealStatus = DealsStatus24::findOne(['type_id' => $status['STATUS_ID']])) {
                        $dealStatus = new DealsStatus24();
                    }
                    $dealStatus->type_id = $status['STATUS_ID'];
                    $dealStatus->status = $status['NAME'];
                    $dealStatus->save();
                };
        }
        return null;
    }

    static public function loadProductsFromDealiB24($id)
    {
        $deal = CRest::call('crm.deal.productrows.get', [
            'id' => $id,
        ]);

        if ($deal && isset($deal['result'])) {

            foreach ($deal['result'] as $k => $value) {
                if (!$prod = DealsProducts24::findOne(['owner_id'=>$id , 'product_id'=> $value['PRODUCT_ID']])) {
                    $prod = new DealsProducts24();
                    foreach ($value as $p => $prod24value) {
                        $key = strtolower($p);
                        $prod->$key = $prod24value;
                    }
                    $prod->save();
                }else {
                    foreach ($value as $p => $prod24value) {
                        $key = strtolower($p);
                        if ($k!= 'id') {
                            $prod->$key = $prod24value;
                        }
                    }
                    $prod->update();
                }
            }
        }
    }

    static public function getCount($type='spec'){
        return self::find()->from('b24_deals_'. $type)->select(['distinct(deal_id)'])->distinct('deal_id')->asArray()->count();
    }
}